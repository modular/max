load("@rules_pkg//pkg:mappings.bzl", "pkg_filegroup", "pkg_files")
load("//bazel:api.bzl", "modular_py_binary", "modular_py_library", "requirement")

package(default_visibility = ["//visibility:public"])

modular_py_library(
    name = "entrypoints",
    srcs = glob(
        ["**/*.py"],
        exclude = [
            "mojo.py",
            "pipelines.py",
            "replay_recording.py",
        ],
    ),
    visibility = ["//visibility:public"],
    deps = [
        "//SDK/lib/API/python/max/pipelines",
        "//SDK/lib/API/python/max/serve",
        "//SDK/lib/API/python/max/serve/pipelines",
        requirement("click"),
        requirement("gguf"),
        requirement("huggingface-hub"),
        requirement("numpy"),
        requirement("opentelemetry-api"),
        requirement("opentelemetry-sdk"),
        requirement("pillow"),
        requirement("psutil"),
        requirement("requests"),
        requirement("tokenizers"),
        requirement("tqdm"),
        requirement("transformers"),
        requirement("uvicorn"),
        requirement("uvloop"),
    ],
)

modular_py_library(
    name = "mojo",
    srcs = ["mojo.py"],
    visibility = ["//visibility:public"],
)

modular_py_binary(
    name = "pipelines",
    srcs = [
        "pipelines.py",
    ],
    data = ["@flash_attn"],
    env = {
        "OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION": "base2_exponential_bucket_histogram",
        "FLASH_ATTENTION_LIBRARY": "$(location @flash_attn)",
    },
    deps = [
        "//SDK/lib/API/python/max/entrypoints",
        "//SDK/lib/API/python/max/nn",
        "//SDK/lib/API/python/max/pipelines",
        "//SDK/lib/API/python/max/pipelines/architectures",
        "//SDK/lib/API/python/max/serve",
        requirement("click"),
        requirement("huggingface-hub"),
        requirement("pillow"),
        requirement("transformers"),
        requirement("uvicorn"),
    ],
)

modular_py_binary(
    name = "replay_recording",
    srcs = ["replay_recording.py"],
    deps = [
        "//SDK/lib/API/python/max/serve/recordreplay",
        requirement("click"),
        requirement("httpx"),
    ],
)

pkg_files(
    name = "python_files",
    srcs = glob(
        [
            "**/*.py",
        ],
    ),
    # Don't strip the prefix of subdirectories.
    strip_prefix = "",
)

pkg_filegroup(
    name = "entrypoints_python",
    srcs = [
        ":python_files",
        "//open-source/max/benchmark:python_files",
    ],
)
